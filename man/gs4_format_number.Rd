% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gs4_format.R
\name{gs4_format_number}
\alias{gs4_format_number}
\title{Class for Google Sheets number formats}
\usage{
gs4_format_number(x = double(), pattern = "0.00")
}
\arguments{
\item{x}{Double.}

\item{pattern}{Character. Defaults to "0.00", ie round with two significant
digits. For options see the \href{https://developers.google.com/sheets/api/guides/formats}{Google Documentation}.}
}
\value{
An S3 vector of class \code{googlesheets4_format_number}.
}
\description{
Often, we want to see our Google Sheets data in a "pretty" format, for
example 0.45 as 45\%, without changing the underlying data. In order to format
numbers into Google Sheets, you need to store it as an object of class
\code{googlesheets4_format_number}. This is how we know how to format a given
numeric vector. \code{googlesheets4_format_number} is an S3 class implemented
using the \href{https://vctrs.r-lib.org/articles/s3-vector.html}{vctrs package}.
}
\examples{
if (gs4_has_token()) {
  dat <- data.frame(small_number = runif(10), big_number = runif(10) * 1e6)
  # explicitly declare columns as `googlesheets4_format_number`
  dat$small_number <- gs4_format_number(dat$small_number, "0.0\%")
  # from https://webapps.stackexchange.com/questions/77974/short-number-format-in-google-sheets-1-024-\%E2\%86\%92-1k-1-816-724-\%E2\%86\%92-1-8m
  dat$big_number <- gs4_format_number(dat$big_number, "[>999999]0.0,,\\\\M;[>999]0.0,\\\\K;0")

  # make the sheet
  ss <- gs4_create("gs4-number-formats-demo", sheets = dat)
  ss

  # clean up
  gs4_find("gs4-formula-demo") \%>\%
    googledrive::drive_trash()
}
}
\seealso{
Other write functions: 
\code{\link{gs4_create}()},
\code{\link{gs4_formula}()},
\code{\link{range_delete}()},
\code{\link{range_flood}()},
\code{\link{range_write}()},
\code{\link{sheet_append}()},
\code{\link{sheet_write}()}
}
\concept{write functions}
